/*
*
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define QWERTY  1
#define LOWER   2
#define RAISE   3
#define ADJUST  4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "COLMAK";
// -------------------------------------------------------------------------------------------------------
// |  TAB  |   Q   |   W   |   F   |   P   |   G   |     |   J   |   L   |   U   |   Y   |   ;   | BSPC  |
// |  CTRL |   A   |   R   |   S   |   T   |   D   |     |   H   |   N   |   E   |   I   |   O   |   '   |
// | SHIFT |   Z   |   X   |   C   |   V   |   B   |     |   K   |   M   |   ,   |   .   |   /   | ENTER |
//                     |  ALT  | LOWER |   SPACE   |     |   SPACE   | RAISE |  GUI  |
            bindings = <
   &kp TAB   &kp Q     &kp W     &kp F     &kp P     &kp G        &kp J     &kp L     &kp U     &kp Y     &kp SEMI  &kp BSPC
   &kp LCTRL &kp A     &kp R     &kp S     &kp T     &kp D        &kp H     &kp N     &kp E     &kp I     &kp O     &kp APOS
   &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B        &kp K     &kp M     &kp COMMA &kp DOT   &kp SLASH &mt RSHFT ENTER
                              &kp LALT &mo LOWER &kp SPACE        &kp SPACE &mo RAISE &kp LGUI
            >;
        };

        qwerty_layer {
            label = "QWERTY";
// -------------------------------------------------------------------------------------------------------
// |  TAB  |   Q   |   W   |   E   |   R   |   T   |     |   Y   |   U   |   I   |   O   |   P   | BSPC  |
// |  CTRL |   A   |   S   |   D   |   F   |   G   |     |   H   |   J   |   K   |   L   |   ;   |   '   |
// | SHIFT |   Z   |   X   |   C   |   V   |   B   |     |   N   |   M   |   ,   |   .   |   /   | ENTER |
//                     |  ALT  | LOWER |   SPACE   |     |   SPACE   | RAISE |  GUI  |
            bindings = <
   &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T        &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSPC
   &kp LCTRL &kp A     &kp S     &kp D     &kp F     &kp G        &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp APOS
   &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B        &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH &mt RSHFT ENTER
                              &kp LALT &mo LOWER &kp SPACE        &kp SPACE &mo RAISE &kp LGUI
            >;
        };

        lower_layer {
            label = "LOWER";
// -------------------------------------------------------------------------------------------------------
// |  ESC  |   1   |   2   |   3   |   4   |   5   |     |   6   |   7   |   8   |   9   |   0   | BSPC  |
// |       |   ←   |   ↓   |   ↑   |   →   |  TAB  |     |   #   |   -   |   =   |   [   |   ]   |   `   |
// |       |   =   |   ÷   |   ×   |   -   |   +   |     |   ,   |   .   |       |       |   \   | ENTER |
//                     |       |       |           |     |           |       |       |
            bindings = <
   &kp ESC &kp N1       &kp N2        &kp N3          &kp N4       &kp N5             &kp N6          &kp N7     &kp N8    &kp N9   &kp N0   &kp BSPC
   &trans  &kp LEFT     &kp DOWN      &kp UP          &kp RIGHT    &kp TAB            &kp NON_US_HASH &kp MINUS  &kp EQUAL &kp LBKT &kp RBKT &kp GRAVE
   &trans  &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS &kp KP_PLUS        &kp KP_COMMA    &kp KP_DOT &trans    &trans   &kp BSLH &kp KP_ENTER
                                                          &trans &trans &trans        &trans &trans &trans
            >;
        };

        raise_layer {
            label = "RAISE";
// -------------------------------------------------------------------------------------------------------
// |  TAB  |   F1  |   F2  |   F3  |   F4  |   F5  |     |   F6  |   F7  |   F8  |   F9  |  F10  |  DEL  |
// |       |  F11  |  F12  |  F13  |  F14  |  F15  |     |  F16  |   ←   |   ↓   |   ↑   |   →   | BSPC  |
// |       |       |       | PSCRN | SCROL | PAUSE |     |  INS  | HOME  | PG DN | PG UP |  END  |       |
//                     |       |       |           |     |           |       |       |
            bindings = <
   &kp TAB &kp F1  &kp F2  &kp F3    &kp F4   &kp F5                 &kp F6  &kp F7   &kp F8    &kp F9    &kp F10   &kp DEL
   &trans  &kp F11 &kp F12 &kp F13   &kp F14  &kp F15                &kp F16 &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp BSPC
   &trans  &trans  &trans  &kp PSCRN &kp SLCK &kp PAUSE_BREAK        &kp INS &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans
                                         &trans &trans &trans        &trans &trans &trans
            >;
        };
                
        adjust_layer {
            label = "ADJUST";
// -------------------------------------------------------------------------------------------------------
// | BTCLR |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |     |  xxx  | BACK  | RFRSH |  FWD  | CALC  |  xxx  |
// |  CAPS |  xxx  |  xxx  |  xxx  |  xxx  |  xxx  |     |  xxx  | PREV  | PLAY  | NEXT  | BRI + |  xxx  |
// |  xxx  |  xxx  |  xxx  | LAYER |  USB  |  BLE  |     |  xxx  | MUTE  | VOL - | VOL + | BRI - |  xxx  |
//                     |       |       |           |     |           |       |       |
            bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &none &kp K_BACK  &kp K_REFRESH    &kp K_FORWARD &kp K_CALC   &none
   &kp CAPS   &none        &none        &none        &none        &none               &none &kp C_PREV  &kp C_PLAY_PAUSE &kp C_NEXT    &kp C_BRI_UP &none
   &none      &none        &none        &tog QWERTY  &out OUT_USB &out OUT_BLE        &none &kp C_MUTE  &kp C_VOL_DN     &kp C_VOL_UP  &kp C_BRI_DN &none
                                                          &trans &trans &trans        &trans &trans &trans
            >;
        };
    };
};
